---
title: The camel is functional!
tags:
  - Perl
description: >
    Amazing functional programming joy I, sinner, never expected from Perl
---

Closures in Perl! Cita il libro di JavaScript su Function Programming, altro parallelo per articolo JavaScript and Perl


Poi Ã¨ diventatpo

check_config('Sky::Siebel::DatabaseConnection')->($_) for (qw(datasource username password));


Il sorgente era tipo

package Sky::CMS::Test::Configuration;

use v5.20.1;

use warnings;



use parent 'Test::Class';



use Test::More;



use Sky::CMS::File::Config;



use Sky::CMS::File::SelectionList;

use Sky::CMS::Prospect::DatabaseConnection;

use Sky::Siebel::DatabaseConnection;

use Sky::DPD::SFTP;

use Sky::DPD::SFTP::DoorDrop;

use Sky::DPD::SFTP::Mailing;



sub test_config : Test(15) {

    my $config_file = Sky::CMS::File::Config->new;

    ok $config_file->is_a_plain_file, "config file exists: $config_file";



    my $cms_file_selectionlist = Sky::CMS::File::SelectionList->new;

    ok $cms_file_selectionlist->dirname, 'CMS > File > SelectionList > dirname';



    my $cms_prospect_databaseconnection = Sky::CMS::Prospect::DatabaseConnection->new;

    ok $cms_prospect_databaseconnection->datasource, 'CMS > Prospect > DatabaseConnection > datasource';

    ok $cms_prospect_databaseconnection->username,   'CMS > Prospect > DatabaseConnection > username';

    ok $cms_prospect_databaseconnection->password,   'CMS > Prospect > DatabaseConnection > password';



sub check_config {

my $class = shift;



my $separator = ' > ';

# Build message from class namespace.

my $message = join $separator,(split '::',$class);



# Create an instance of class with defaults, provided by configuration.

my $object = $class->new;



return sub {

 my $attribute = shift;

    is  $object->config->{$attribute},$object->$attribute, join $separator,($message,$attribute);

}

}

    my $siebel_databaseconnection = Sky::Siebel::DatabaseConnection->new;

    for my $attribute (qw(datasource username password)) {

    check_config('Sky::Siebel::DatabaseConnection')->($attribute);

    #is  $siebel_databaseconnection->config->{$attribute},$siebel_databaseconnection->$attribute, 'Siebel > DatabaseConnection > '.$attribute;

    }



    my $dpd_sftp = Sky::DPD::SFTP->new;

    ok $dpd_sftp->hostname, 'DPD > SFTP > hostname';

    ok $dpd_sftp->incoming_dirname, 'DPD > SFTP > incoming_dir';

    ok $dpd_sftp->outgoing_dirname, 'DPD > SFTP > outgoing_dir';



    my $dpd_sftp_mailing = Sky::DPD::SFTP::Mailing->new;

    ok $dpd_sftp_mailing->username, 'DPD > SFTP > Mailing > username';

    ok $dpd_sftp_mailing->password, 'DPD > SFTP > Mailing > password';



    my $dpd_sftp_doordrop = Sky::DPD::SFTP::DoorDrop->new;

    ok $dpd_sftp_doordrop->username, 'DPD > SFTP > DoorDrop > username';

    ok $dpd_sftp_doordrop->password, 'DPD > SFTP > DoorDrop > password';



    #$config = Sky::DirektPost::SFTP->new->config; Teleselling

    #ok $config->{hostname}, 'DPD > SFTP > hostname';

    #ok $config->{incoming_dir}, 'DPD > SFTP > incoming_dir';

    #ok $config->{outgoing_dir}, 'DPD > SFTP > outgoing_dir';

}



1;



